{"version":3,"sources":["request.js","components.js","App.js","index.js"],"names":["require","defaults","baseUrl","Post","props","useState","comments","setComments","useEffect","commentId","request","err","res","data","concat","JSON","parse","getComments","postId","className","body","author","href","onClick","onDelete","map","comment","i","Comment","key","uid","App","posts","setPosts","get","handleAddPost","useCallback","evt","preventDefault","formInputs","target","elements","newPost","value","post","url","form","handleDeletePost","delete","filter","onSubmit","name","placeholder","type","length","ReactDOM","render","document","getElementById"],"mappings":"yVAAeA,IAAQ,KACpBC,SAAS,CAAEC,QAAS,0BCEvB,SAASC,EAAKC,GAAQ,IAAD,EACeC,mBAAS,IADxB,mBACXC,EADW,KACDC,EADC,KAgBnB,OAdAC,oBAAU,WASJJ,EAAME,UARV,WAAwB,IAAD,uBACrB,YAAwBF,EAAME,SAA9B,+CAAwC,CAAC,IAA9BG,EAA6B,QACtCC,EAAQ,gBAAD,OAAiBD,GAAa,SAACE,EAAKC,EAAKC,GAC9CN,EAAY,SAAAD,GAAQ,OAAIA,EAASQ,OAAO,CAACC,KAAKC,MAAMH,UAHnC,mFASrBI,IAED,CAACb,EAAMc,OAAQd,EAAME,WAGtB,yBAAKa,UAAU,gBACb,6BAASA,UAAU,QACjB,6BACE,4BAAKf,EAAMgB,MACX,kCAAQhB,EAAMiB,UAGlB,gCACE,uBAAGC,KAAK,IAAIC,QAASnB,EAAMoB,UAA3B,qBAEF,yBAAKL,UAAU,YACb,wCACCb,EAASmB,IAAI,SAACC,EAASC,GAAV,OACZ,kBAACC,EAAD,CACEC,IAAKH,EAAQI,IACbT,OAAQK,EAAQL,OAChBD,KAAMM,EAAQN,WAQ1B,SAASQ,EAAQxB,GACf,OACE,yBAAKe,UAAU,WACb,8BACE,2BACE,yBAAKA,UAAU,kBAAkBf,EAAMiB,OAAvC,KACCjB,EAAMgB,QCyBFW,MAvEf,WAAgB,IAAD,EACe1B,mBAAS,IADxB,mBACL2B,EADK,KACEC,EADF,KAGbzB,oBAAU,WAENE,EAAQwB,IAAI,aAAc,SAACvB,EAAKC,EAAKC,GACnCoB,EAASlB,KAAKC,MAAMH,OAKvB,IAEH,IAAMsB,EAAgBC,sBAAY,SAAAC,GAChCA,EAAIC,iBACJ,IAAMC,EAAaF,EAAIG,OAAOC,SAExBC,EAAU,CACdrB,OAAQkB,EAAU,OAAWI,MAC7BvB,KAAMmB,EAAU,KAASI,OAG3BjC,EAAQkC,KAAK,CACXC,IAAK,aACLC,KAAMJ,GACL,SAAC/B,EAAKC,EAAKC,GACZoB,EAAS,SAAAD,GAAK,MAAI,CAACjB,KAAKC,MAAMH,IAAOC,OAAOkB,QAE7C,IAEGe,EAAmBX,sBAAY,SAAAlB,GACnCR,EAAQsC,OAAR,oBAA4B9B,GAAU,SAACP,EAAKC,EAAKC,GAC/CoB,EAAS,SAAAD,GAAK,OAAIA,EAAMiB,OAAO,SAAAL,GAAI,OAAIA,EAAK1B,SAAWA,SAExD,IAEH,OACE,yBAAKC,UAAU,aACb,2BAAOA,UAAU,eACf,0BAAM+B,SAAUf,GACd,6BACE,gDACA,8BAAUgB,KAAK,OAAOC,YAAY,qBAEpC,yBAAKjC,UAAU,OACb,uCACA,2BAAOkC,KAAK,OAAOF,KAAK,YAE1B,2BAAOE,KAAK,SAASV,MAAM,kBAI/B,0BAAMxB,UAAU,WACK,IAAjBa,EAAMsB,OACJ,+CACAtB,EAAMP,IAAI,SAAAmB,GAAI,OACd,kBAACzC,EAAD,CACE0B,IAAKe,EAAK1B,OACVA,OAAQ0B,EAAK1B,OACbG,OAAQuB,EAAKvB,OACbD,KAAMwB,EAAKxB,KACXd,SAAUsC,EAAKtC,SACfkB,SAAU,kBAAMuB,EAAiBH,EAAK1B,gB,OC5DpDqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fc3e1977.chunk.js","sourcesContent":["export default require('request')\n  .defaults({ baseUrl: 'http://localhost:5000' });\n","import React, { useState, useEffect } from 'react';\nimport request from './request';\n\nfunction Post(props) {\n  const [ comments, setComments ] = useState([]);\n  useEffect(() => {\n    function getComments() {\n      for (const commentId of props.comments) {\n        request(`/api/comment/${commentId}`, (err, res, data) => {\n          setComments(comments => comments.concat([JSON.parse(data)]));\n        })\n      }\n    }\n\n    if (props.comments) {\n      getComments();\n    }\n  }, [props.postId, props.comments]);\n\n  return (\n    <div className=\"post-wrapper\">\n      <article className=\"post\">\n        <div>\n          <h1>{props.body}</h1>\n          <h2>by {props.author}</h2>\n        </div>\n      </article>\n      <footer>\n        <a href=\"#\" onClick={props.onDelete}>Delete this post</a>\n      </footer>\n      <div className=\"comments\">\n        <h5>Comments</h5>\n        {comments.map((comment, i) => (\n          <Comment\n            key={comment.uid}\n            author={comment.author}\n            body={comment.body}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction Comment(props) {\n  return (\n    <div className=\"comment\">\n      <main>\n        <p>\n          <div className=\"comment-author\">{props.author}:</div>\n          {props.body}\n        </p>\n      </main>\n    </div>\n  );\n}\n\nexport { Post };\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Post } from './components';\nimport request from './request';\n\nfunction App() {\n  const [ posts, setPosts ] = useState([]);\n\n  useEffect(() => {\n    function getAllPosts() {\n      request.get('/api/posts', (err, res, data) => {\n        setPosts(JSON.parse(data));\n      });\n    }\n\n    getAllPosts()\n  }, [])\n\n  const handleAddPost = useCallback(evt => {\n    evt.preventDefault();\n    const formInputs = evt.target.elements;\n\n    const newPost = {\n      author: formInputs['author'].value,\n      body: formInputs['body'].value\n    }\n\n    request.post({\n      url: '/api/posts',\n      form: newPost\n    }, (err, res, data) => {\n      setPosts(posts => [JSON.parse(data)].concat(posts));\n    })\n  }, []);\n\n  const handleDeletePost = useCallback(postId => {\n    request.delete(`/api/post/${postId}`, (err, res, data) => {\n      setPosts(posts => posts.filter(post => post.postId !== postId));\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <aside className=\"action-menu\">\n        <form onSubmit={handleAddPost}>\n          <div>\n            <h3>Create new post:</h3>\n            <textarea name=\"body\" placeholder=\"type stuff here\"/>\n          </div>\n          <div className=\"row\">\n            <label>Name</label>\n            <input type=\"text\" name=\"author\" />\n          </div>\n          <input type=\"submit\" value=\"Submit Post\"/>\n        </form>\n      </aside>\n\n      <main className=\"content\">\n        {(posts.length === 0\n          ? <p>Loading posts...</p>\n          : posts.map(post => (\n            <Post\n              key={post.postId}\n              postId={post.postId}\n              author={post.author}\n              body={post.body}\n              comments={post.comments}\n              onDelete={() => handleDeletePost(post.postId)}\n            />\n          ))\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}